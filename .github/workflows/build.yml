name: build

on:
  workflow_call:       # workflow is reusable
  workflow_dispatch:   # workflow can be run manually from the actions tab

env:
  # Conan cache environment variables
  CONAN_SYSREQUIRES_MODE: enabled
  CONAN_USER_HOME: "${{ github.workspace }}/conan-cache"
  CONAN_USER_HOME_SHORT: "${{ github.workspace }}/conan-cache/short"
  CLANG_TIDY_VERSION: "15.0.6"
  
jobs:    

  ci:  
    runs-on: ${{ matrix.os }}    

    steps:    
   
      - run: echo ${{ github.workspace }} 
      - run: echo ${{ matrix.os }} ${{ matrix.arch }} 
      - run: echo ${{ matrix.generator }} ${{ matrix.compiler }} ${{ matrix.build_type }} 
      - run: echo dev-mode ${{ matrix.developer_mode }} 
 
      - uses: actions/checkout@v3
      
      - name: Setup Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/vcpkg
            ./build/vcpkg_installed
            ${{ env.CONAN_USER_HOME }}
            ~/.cache/pip
            ${{ env.HOME }}/.cache/vcpkg/archives
            ${{ env.XDG_CACHE_HOME }}/vcpkg/archives
            ${{ env.LOCALAPPDATA }}\vcpkg\archives
            ${{ env.APPDATA }}\vcpkg\archives
          key: ${{ runner.os }}-${{ matrix.compiler }}-${{ matrix.build_type }}-${{ hashFiles('./conanfile.txt')}}-${{ matrix.generator }}-${{ matrix.developer_mode }}-${{ hashFiles('**/CMakeLists.txt') }}-${{ hashFiles('./vcpkg.json')}}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.compiler }}-${{ matrix.build_type }}-${{ hashFiles('./conanfile.txt') }}

      - name: Setup Cpp
        uses: aminya/setup-cpp@v1
        with:
          python: true
          compiler: ${{ matrix.compiler }}
          vcvarsall: ${{ contains(matrix.os, 'windows') }}
          cmake: true
          ninja: true
          vcpkg: true
          cppcheck: true
          clangtidy: true
          clangformat: true
          doxygen: true
          graphviz: true
          
      - run: .github/scripts/install-all.sh 
      - run: .github/scripts/build-all.sh 

    strategy:

      fail-fast: false

      matrix:
        os:
          - ubuntu-22.04
        # - windows-2022
        # - macos-12
        arch:
          - X64
        # - ARM64
        compiler:
          - llvm-15.0.6
        # - gcc-13
        generator:
          - "Ninja Multi-Config"
        build_type:
          - Debug
        # - Release
        developer_mode:
          - ON
        # - OFF  
          
          
          
          
          
          
