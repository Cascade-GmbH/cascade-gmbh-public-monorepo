
name: build

on:
  workflow_call:       # workflow is reusable
  workflow_dispatch:   # workflow can be run manually from the actions tab

env:
  CONAN_SYSREQUIRES_MODE: enabled
  CONAN_USER_HOME: "${{ github.workspace }}/conan-cache"
  CONAN_USER_HOME_SHORT: "${{ github.workspace }}/conan-cache/short"
  CLANG_TIDY_VERSION: "15.0.6"

jobs:    

  ci:  
    runs-on: ${{ matrix.os }}    

    env:
      PROJECT_BUILD_HOME: "${{ github.workspace }}/cmake_out"
      PROJECT_DEPLOY_HOME: "${{ github.workspace }}/.github/pages/${{ matrix.build_type }}/${{ matrix.os }}/${{ matrix.arch }}/${{ matrix.compiler }}"
 
    defaults:
      run:
        shell: bash
        # working-directory: scripts
 
    steps:    
   
      #- run: echo PROJECT_BUILD_HOME $PROJECT_BUILD_HOME
      #- run: echo PROJECT_DEPLOY_HOME $PROJECT_DEPLOY_HOME
 
      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'
      
  #    - name: Setup Cpp
  #      uses: aminya/setup-cpp@v1
 #       with:
    #      compiler: ${{ matrix.compiler }}
        #  vcvarsall: ${{ contains(matrix.os, 'windows') }}
  #        cmake: true
   #       ninja: true
         # vcpkg: true
        #  cppcheck: true
       #   clangtidy: true
        #  clangformat: true
      #    doxygen: true
      #    graphviz: true
          
    #  - run: .github/scripts/install-all.sh 
      - run: |
          echo ENTER SCRIPTS
          .github/scripts/build-all.sh 
          echo EXIT SCRIPTS

    strategy:

      fail-fast: false

      matrix:
        os:
          - ubuntu-22.04
          - windows-2022
        #  - macos-12
        arch:
          - X64
         # - ARM64
        compiler:
         # - llvm
          - gcc
        generator:
          - "Ninja Multi-Config"
        build_type:
          - Debug
        # - Release
        developer_mode:
          - ON
        # - OFF  
        
        include:
        
          - os: windows-2022
            arch: X64
            compiler: msvc
            generator: "Visual Studio 17 2022"
            build_type: Debug
            developer_mode: ON
        
          - os: windows-2022
            arch: ARM64
            compiler: msvc
            generator: "Visual Studio 17 2022"
            build_type: Debug
            developer_mode: ON



      #- run: mkdir -p .github/pages/${{ matrix.build_type }}/${{ matrix.os }}/${{ matrix.arch }}/${{ matrix.compiler }}/cocor.exe
      #- run: cp ~/cmake_out/cocor/cocor .github/pages/${{ matrix.build_type }}/${{ matrix.os }}/${{ matrix.arch }}/${{ matrix.compiler }}/cocor.exe
      
      #- name: Setup Pages
      #  uses: actions/configure-pages@v2
      #- name: Build with Jekyll
      #  uses: actions/jekyll-build-pages@v1
      #  with:
      #    source: .github/pages/
      #    destination: ./_site
      #- name: Upload artifact
      #  uses: actions/upload-pages-artifact@v1  
      

          
          
          
